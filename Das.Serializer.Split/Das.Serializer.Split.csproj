<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netcoreapp3.0;net472</TargetFrameworks>
	 <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <Version>0.0.2-alpha</Version>
  </PropertyGroup>

  <PropertyGroup>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <Description>Xml/Json/Protocol Buffers/Binary&lt;-&gt;Anything

Split into dlls to facilitate loose coupling via coding to abstractions:
Das.Serializer.dll (fw/core)
Serializer.Core.dll - no dynamic type generation (standard)
Serializer.Interfaces (standard)</Description>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/IButtonPusher/Das_Serializer</PackageProjectUrl>
    <RepositoryUrl>https://github.com/IButtonPusher/Das_Serializer.git</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <RootNamespace>Das.Serializer</RootNamespace>
    <Authors>Claus Trappberger</Authors>
    <AssemblyName>Das.Serializer</AssemblyName>
    <PackageId>Das.Serializer.Split</PackageId>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|netcoreapp3.0|AnyCPU'">
    <OutputPath>E:\src\Das\Serializer\Das.Serializer\bin\Debug\</OutputPath>
  </PropertyGroup>

	

  <Import Project="..\Serializer.Shared\Serializer.Shared.projitems" Label="Shared" />

  <ItemGroup>
    <PackageReference Include="Das.Serializer.Core" Version="0.0.1-alpha" />
    <PackageReference Include="Microsoft.CSharp" Version="4.6.0" />
  </ItemGroup>
  
  <Target Name="CopyProjectReferencesToPackage" DependsOnTargets="ResolveReferences">
    <ItemGroup>
      <BuildOutputInPackage Include="@(ReferenceCopyLocalPaths-&gt;WithMetadataValue('ReferenceSourceTarget', 'ProjectReference'))" />
    </ItemGroup>
  </Target>

<PropertyGroup>
   <LangVersion>8.0</LangVersion>
   <Nullable>enable</Nullable>
</PropertyGroup>


</Project>
